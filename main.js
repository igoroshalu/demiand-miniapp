/* ---------- 0.  –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã API ---------- */
const API = 'https://ap.demiand.ru/demiand-mobile/telegram-bot';
const URL_LIST   = API + '/get-recipes';
const URL_DETAIL = uid => API + '/get-recipe/' + uid;

/* ---------- 1.  –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ ---------- */
let recipes = [];           // –∫–∞—Ä—Ç–æ—á–∫–∏
let filters = ['–í—Å–µ'];      // ¬´–í—Å–µ¬ª + —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
let currentFilter = '–í—Å–µ';

/* ---------- 2.  DOM ---------- */
const filtersEl    = document.getElementById('filters');
const gridEl       = document.getElementById('grid');
const modalEl      = document.getElementById('modal');
const modalContent = document.getElementById('modalContent');
/* --- ‚ú±  –û–ë–ù–û–í–õ–Å–ù–ù–´–ô closeBtn  (–Ω–µ –∑–∞–∫—Ä—ã–≤–∞–µ—Ç –º–∏–Ω–∏-–∞–ø) --- */
document.querySelector('.closeBtn').onclick = () =>
  document.getElementById('modal').classList.remove('open');


/* ---------- 3.  –ó–∞–≥—Ä—É–∑–∫–∞ —Å–ø–∏—Å–∫–∞ ---------- */
fetch(URL_LIST)
  .then(r => r.json())
  .then(res => {
    if (res.result !== 1 || !res.data?.items) throw 'bad API list';
    recipes = res.data.items.map(it => ({
      uid:   it.uid,
      title: it.name,
      time:  `${it.cookingTime} –º–∏–Ω`,
      photo: it.previewPhotoUrl,
      cats:  it.mainIngredients?.map(m => m.name) || ['–ë–µ–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏']
    }));

    // —Å–æ–±–∏—Ä–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    filters = ['–í—Å–µ', ...new Set(recipes.flatMap(r => r.cats))];

    renderFilters();
    renderGrid();
  })
  .catch(err => {
    console.error(err);
    gridEl.innerHTML = '<p style="padding:20px;color:var(--txt-sec)">–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ä–µ—Ü–µ–ø—Ç—ã üòî</p>';
  });

/* ---------- 4.  –§–∏–ª—å—Ç—Ä—ã ---------- */
function renderFilters() {
  filtersEl.innerHTML = '';
  filters.forEach(cat => {
    const b = document.createElement('button');
    b.textContent = cat;
    if (cat === currentFilter) b.classList.add('active');
    b.onclick = () => { currentFilter = cat; updateFilterUI(); renderGrid(); };
    filtersEl.appendChild(b);
  });
}
function updateFilterUI() {
  [...filtersEl.children].forEach(b =>
    b.classList.toggle('active', b.textContent === currentFilter)
  );
}

/* ---------- 5.  –°–µ—Ç–∫–∞ –∫–∞—Ä—Ç–æ—á–µ–∫ ---------- */
function renderGrid() {
  gridEl.innerHTML = '';
  recipes
    .filter(r => currentFilter === '–í—Å–µ' || r.cats.includes(currentFilter))
    .forEach(r => {
      const card = document.createElement('div');
      card.className = 'card';
      card.dataset.uid = r.uid;          // ‚Üê —á—Ç–æ–±—ã –≤–Ω–µ—à–Ω–∏–π –º–æ–¥—É–ª—å –∑–Ω–∞–ª UID
      card.innerHTML = `
        <img src="${r.photo}" alt="">
        <h4>${r.title}</h4>
        <div class="meta">
          <svg viewBox="0 0 24 24"><path d="M12 7a1 1 0 011 1v4l2.5 1.5a1 1 0 11-1 1.732L11 13V8a1 1 0 011-1z"/><path d="M12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10-4.477 10-10 10zm0-18C7.589 4 4 7.589 4 12s3.589 8 8 8 8-3.589 8-8-3.589-8-8-8z"/></svg>
          ${r.time}
        </div>`;
      card.onclick = () => openRecipe(r.uid);
      gridEl.appendChild(card);
    });
}


/* ---------- 6.  –î–µ—Ç–∞–ª—å–Ω—ã–π —Ä–µ—Ü–µ–ø—Ç ---------- */
function openRecipe(uid){
  modalContent.innerHTML='<p style="padding:20px;color:var(--txt-sec)">–ó–∞–≥—Ä—É–∂–∞–µ–º‚Ä¶</p>';
  modalEl.classList.add('open');
  Telegram.WebApp.expand && Telegram.WebApp.expand();

  fetch(URL_DETAIL(uid))
    .then(r=>r.json())
    .then(res=>{
      if(res.result!==1||!res.data)throw'bad detail';
      renderRecipe(res.data);
    })
    .catch(e=>{
      console.error(e);
      modalContent.innerHTML='<p style="padding:20px;color:var(--txt-sec)">–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ä–µ—Ü–µ–ø—Ç üòî</p>';
    });
}


/* --- ‚ú±  –û–ë–ù–û–í–õ–Å–ù–ù–´–ô  renderRecipe  --- */
function renderRecipe(d){
  const clock = `<svg viewBox="0 0 24 24"><path d="M12 7a1 1 0 011 1v4l2.5 1.5a1 1 0 11-1 1.732L11 13V8a1 1 0 011-1z"/><path d="M12 22C6.48 22 2 17.52 2 12S6.48 2 12 2s10 4.48 10 10-4.48 10-10 10zm0-18C7.59 4 4 7.59 4 12s3.59 8 8 8 8-3.59 8-8-3.59-8-8-8z"/></svg>`;

  /* –Ω—É—Ç—Ä–∏ */
  const nutri = `
    <div class="tile nutri">
      <div class="nutri-item"><strong>${d.calories}</strong><span>–∫–∫–∞–ª</span></div>
      <div class="nutri-item"><strong>${d.proteins}</strong><span>–±–µ–ª–∫–∏</span></div>
      <div class="nutri-item"><strong>${d.fats}</strong><span>–∂–∏—Ä—ã</span></div>
      <div class="nutri-item"><strong>${d.carbohydrates}</strong><span>—É–≥–ª–µ–≤.</span></div>
    </div>`;

  /* –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã */
  const ing = d.ingredients?.length ? `
    <div class="tile"><h3>–ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã</h3>
      <ul class="ing">
        ${d.ingredients.map(i=>`
          <li><span>${i.ingredient.name}</span><span>${i.amount} ${i.unit.name}</span></li>`).join('')}
      </ul>
    </div>` : '';

  /* —à–∞–≥–∏ */
  const steps = d.steps?.map(s=>`
    <div class="step-card">
      ${s.photoUrl?`<img src="${s.photoUrl}">`:''}
      <p><b>–®–∞–≥ ${s.number}.</b> ${s.text}</p>
    </div>`).join('') ?? '';

  /* —Å–æ–≤–µ—Ç—ã */
  const advises = d.advises?.length ? `
    <div class="tile"><h3>–°–æ–≤–µ—Ç—ã –ø–æ–≤–∞—Ä–∞</h3>
      <ul style="list-style:disc inside;font-size:16px;line-height:1.6;color:var(--txt)">
        ${d.advises.map(a=>`<li>${a}</li>`).join('')}
      </ul>
    </div>` : '';

  /* –≤–∏–¥–µ–æ */
  const video = d.videoUrl ? `
    <div class="tile" style="padding:0">
      <h3 style="padding:12px 16px 0">–í–∏–¥–µ–æ—Ä–µ—Ü–µ–ø—Ç</h3>
      <video controls src="${d.videoUrl}"></video>
    </div>` : '';

  /* –∫–∞—Ç–µ–≥–æ—Ä–∏–∏-–±–µ–π–¥–∂–∏ */
  const cats = d.mainIngredients?.map(m=>`<span class="badge">${m.name}</span>`).join('');

  /* promo button */
  const promo = `
    <div class="download-wrap">
      <a href="https://redirect.appmetrica.yandex.com/serve/29332028361031991"
         target="_blank" class="download-btn">
        111–ü–æ–ª–Ω–∞—è –≤–µ—Ä—Å–∏—è&nbsp;—Ä–µ—Ü–µ–ø—Ç–∞ –≤&nbsp;–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏&nbsp;‚ÜóÔ∏é
      </a>
    </div>`;

  modalContent.innerHTML = `
    <div class="hero"><img src="${d.photoUrl || d.previewPhotoUrl}" alt=""></div>

    <div class="tile title-tile">
      <h1>${d.name}</h1>
      <div class="hero-meta">${clock} ${d.cookingTime} –º–∏–Ω</div>
    </div>

    ${nutri}
    ${cats ? `<div class="badge-row">${cats}</div>` : ''}
    ${d.text ? `<div class="tile desc">${d.text}</div>` : ''}

    ${promo}          <!-- –∫–Ω–æ–ø–∫–∞ -->

    ${ing}
    ${steps}
    ${advises}
    ${video}
  `;
}



/* --- ‚ú±  –°–í–ï–¢–õ–ê–Ø / –¢–Å–ú–ù–ê–Ø –¢–ï–ú–ê  --- */
(function applyTheme(){
  const set = cs => {
    document.documentElement.classList.toggle('light', cs==='light');
  };
  set(Telegram.WebApp.colorScheme);              // –Ω–∞—á–∞–ª—å–Ω–∞—è
  Telegram.WebApp.onEvent('themeChanged', () =>  // –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ ‚Äú–Ω–∞ –ª–µ—Ç—É‚Äù
    set(Telegram.WebApp.colorScheme)
  );
})();

/* 7: Telegram.WebApp.ready ‚Äî –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π */
Telegram.WebApp.ready && Telegram.WebApp.ready();